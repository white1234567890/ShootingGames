#include "PhysicsClass.h"
#include "GroundClass.h"
#include "system.h"

//////////////////////////////////////////////////////////////////////////////
//静的定数
//////////////////////////////////////////////////////////////////////////////
const double PhysicsClass::m_GravityAccelaration = 1;

//コンストラクタ
PhysicsClass::PhysicsClass(void)
{
	m_GravityVelocity = THREE_DIMENSION_VECTOR();
	m_GroundedFlag = false;
	m_Coefficient_of_Restitution = 0;
}

//デストラクタ
PhysicsClass::~PhysicsClass(void)
{
}

//////////////////////////////////////////////////////////////////////////////
//protected関数
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
//概略:
//	物体を移動させる
//////////////////////////////////////////////////////////////////////////////
void PhysicsClass::MoveObject()
{
}

//////////////////////////////////////////////////////////////////////////////
//概略:
//	物体を加速させる
//////////////////////////////////////////////////////////////////////////////
void PhysicsClass::AccelObject()
{
}

//////////////////////////////////////////////////////////////////////////////
//概略:
//	重力計算
//////////////////////////////////////////////////////////////////////////////
void PhysicsClass::GetGravity()
{
	if(m_GroundedFlag)
	{
		m_GravityTime.CounterReset();
		m_GravityVelocity.y = 0;
	}
	else
	{
		m_GravityVelocity.y = m_GravityAccelaration * m_GravityTime.GetCounter();
	}

	m_GravityTime.TimeCount();
}

//////////////////////////////////////////////////////////////////////////////
//概略:
//	接地判定
//////////////////////////////////////////////////////////////////////////////
void IsGrounded()
{
}

//////////////////////////////////////////////////////////////////////////////
//概略:
//	反発計算
//////////////////////////////////////////////////////////////////////////////
void ObjectBound()
{
}