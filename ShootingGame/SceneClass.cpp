#include "SceneManagerClass.h"

#include <gl\glew.h>
#include <gl\glut.h>

#include "common.h"

//////////////////////////////////////////////////////////////////////////////
//BaseSceneClass
//////////////////////////////////////////////////////////////////////////////

//コンストラクタ
BaseSceneClass::BaseSceneClass(void)
{
}

//デストラクタ
BaseSceneClass::~BaseSceneClass(void)
{
}

//////////////////////////////////////////////////////////////////////////////
//public関数
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
//概略:
//	初期化(純粋仮想関数)
//////////////////////////////////////////////////////////////////////////////
bool BaseSceneClass::Initiarize()
{
	return true;
}

//////////////////////////////////////////////////////////////////////////////
//概略:
//	更新(純粋仮想関数)
//////////////////////////////////////////////////////////////////////////////
bool BaseSceneClass::Update()
{
	return true;
}

//////////////////////////////////////////////////////////////////////////////
//概略:
//	描画(純粋仮想関数)
//////////////////////////////////////////////////////////////////////////////
void BaseSceneClass::Render()
{
}

//////////////////////////////////////////////////////////////////////////////
//SceneTitleClass
//////////////////////////////////////////////////////////////////////////////

//コンストラクタ
SceneTitleClass::SceneTitleClass()
{
}

//デストラクタ
SceneTitleClass::~SceneTitleClass()
{
}

//////////////////////////////////////////////////////////////////////////////
//public関数
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
//概略:
//	タイトルシーンを初期化する
//戻り値:
//	true:初期化成功
//	false:初期化失敗
//////////////////////////////////////////////////////////////////////////////
bool SceneTitleClass::Initiarize()
{
	return true;
}

//////////////////////////////////////////////////////////////////////////////
//概略:
//	タイトルシーンを更新する
//戻り値:
//	true:更新成功
//////////////////////////////////////////////////////////////////////////////
bool SceneTitleClass::Update()
{
	if(InputKey(InputClass::E_PROHIBIT_PRESS_TWICE) & InputClass::E_Z_KEY)
	{
		SceneManagerClass::ChangeScene(SceneManagerClass::E_GAME_MAIN);
	}
	return true;
}

//////////////////////////////////////////////////////////////////////////////
//概略:
//	タイトルシーンを描画する
//////////////////////////////////////////////////////////////////////////////
void SceneTitleClass::Render()
{
	//カラーバッファを初期化
	glClear(GL_COLOR_BUFFER_BIT);

	//命令の実行
	glutSwapBuffers();
}

//////////////////////////////////////////////////////////////////////////////
//SceneMainClass
//////////////////////////////////////////////////////////////////////////////

//コンストラクタ
SceneMainClass::SceneMainClass ()
{
}

//デストラクタ
SceneMainClass::~SceneMainClass ()
{
}

//////////////////////////////////////////////////////////////////////////////
//public関数
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
//概略:
//	メインシーンを初期化する
//戻り値:
//	true:初期化成功
//	false:初期化失敗
//////////////////////////////////////////////////////////////////////////////
bool SceneMainClass::Initiarize()
{
	m_Player.Initialize("data/playerstatus.csv" , &m_Shoulder_L , &m_Shoulder_R , &m_Back , &m_Hip);
	cl_PlayerBulletManager = SingletonClass<PlayerBulletManagerClass>::GetInstance();
	return true;
}

//////////////////////////////////////////////////////////////////////////////
//概略:
//	メインシーンを更新する
//戻り値:
//	true:更新成功
//////////////////////////////////////////////////////////////////////////////
bool SceneMainClass::Update()
{
	return true;
}

//////////////////////////////////////////////////////////////////////////////
//概略:
//	メインシーンを描画する
//////////////////////////////////////////////////////////////////////////////
void SceneMainClass::Render()
{
	//カラーバッファを初期化
	glClear(GL_COLOR_BUFFER_BIT);

	//命令の実行
	glutSwapBuffers();
}